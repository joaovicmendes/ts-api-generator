import express from 'express';
import { Sequelize, Model, DataTypes } from 'sequelize';

const port = process.env.PORT || 3000;
const app = express();
app.use(express.json());
const sequelize = new Sequelize('sqlite::memory:');

// model
class Prato extends Model {};
Prato.init({
        nome: DataTypes.STRING,
        description: DataTypes.STRING,
    }, {sequelize, modelName: 'Prato'}
);

class Ingrediente extends Model {};
Ingrediente.init({
        nome: DataTypes.STRING,
        quantidadeRestante: DataTypes.NUMBER,
    }, {sequelize, modelName: 'Ingrediente'}
);

class PratoUsa extends Model {};
PratoUsa.init({
        pratoNome: DataTypes.STRING,
        ingredienteNome: DataTypes.STRING,
        quantidade: DataTypes.NUMBER,
    }, {sequelize, modelName: 'PratoUsa'}
);

const initModel = async () => {
    await sequelize.sync();
}
initModel();
// model-end

// endpoints
app.get('/pratos', async (req, res) => {
    const variable = await Prato.findAll();
    res.status(200).send(JSON.stringify(variable));
});

app.post('/pratos', async (req, res) => {
    const variable = await Prato.create(req.body);
    res.status(200).send(JSON.stringify(variable));
});

app.delete('/pratos/:nome', async (req, res) => {
    Prato.destroy({
        where: {
            nome: req.params.nome
        }
    });
    res.status(200).send();
});

app.post('ingredientes', async (req, res) => {
    const variable = await Ingrediente.create(req.body);
    res.status(200).send(JSON.stringify(variable));
});

// endpoints-end

app.listen(port, () => {
    console.log(`Server running at localhost:${port}`);
});

