import express from 'express';
import { Sequelize, Model, DataTypes } from 'sequelize';

const port = process.env.PORT || 3000;
const app = express();
app.use(express.json());
const sequelize = new Sequelize('sqlite::memory:');

// model
class Course extends Model {};
Course.init({
        uid: DataTypes.NUMBER,
        title: DataTypes.STRING,
        description: DataTypes.STRING,
        instructorId: DataTypes.NUMBER,
        categoryId: DataTypes.NUMBER,
        rating: DataTypes.NUMBER,
        videoUrl: DataTypes.STRING,
        thumbnail: DataTypes.STRING,
        schedule: DataTypes.STRING,
    }, {sequelize, modelName: 'Course'}
);

class Instructor extends Model {};
Instructor.init({
        uid: DataTypes.NUMBER,
        name: DataTypes.STRING,
        email: DataTypes.STRING,
        phone: DataTypes.STRING,
    }, {sequelize, modelName: 'Instructor'}
);

class Category extends Model {};
Category.init({
        uid: DataTypes.NUMBER,
        name: DataTypes.STRING,
        color: DataTypes.STRING,
    }, {sequelize, modelName: 'Category'}
);

const initModel = async () => {
    await sequelize.sync();
}
initModel();
// model-end

// endpoints
app.get('/courses', async (req, res) => {
    const variable = await Course.findAll();
    res.status(200).send(JSON.stringify(variable));
});

app.get('/courses/:uid', async (req, res) => {
    const variable = await Course.findOne({
        where: {
            uid: req.params.uid
        }
    });
    res.status(200).send(JSON.stringify(variable));
});

app.post('/courses', async (req, res) => {
    const variable = await Course.create(req.body);
    res.status(200).send(JSON.stringify(variable));
});

app.put('/courses/:uid', async (req, res) => {
    Course.update(req.body, {
        where: {
            uid: req.params.uid
        }
    });
    res.status(200).send();
});

app.delete('/courses/:uid', async (req, res) => {
    Course.destroy({
        where: {
            uid: req.params.uid
        }
    });
    res.status(200).send();
});

app.get('categories', async (req, res) => {
    const variable = await Category.findAll();
    res.status(200).send(JSON.stringify(variable));
});

app.get('instructors/:uid', async (req, res) => {
    const variable = await Instructor.findOne({
        where: {
            uid: req.params.uid
        }
    });
    res.status(200).send(JSON.stringify(variable));
});

// endpoints-end

app.listen(port, () => {
    console.log(`Server running at localhost:${port}`);
});

